import org.apache.thrift.TException;
import org.apache.thrift.transport.TTransportFactory;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TFramedTransport;
import org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters;
import org.apache.thrift.protocol.TBinaryProtocol;
import java.util.*;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


public class SNodeServiceHandler implements SNodeService.Iface
{
  private List<NodeInfo> allNodes = new ArrayList<NodeInfo>();
  private int nodeNum = 0;

  // input is the string that you want to hash
  // the key generated by this function will be the MD5 code of the input
  // mod by range

  public String getKey(String input, String range){
    try {
      MessageDigest md = MessageDigest.getInstance("MD5");
      byte[] messageDigest = md.digest(input.getBytes());
      BigInteger no = new BigInteger(1, messageDigest);
      BigInteger key = no.mod(new BigInteger (range));
      return key.toString(10);
    }
    catch (NoSuchAlgorithmException e) {
      throw new RuntimeException(e);
    }
  }
  

  // randomly choose a node then give it's information the the client
  public NodeInfo getNode(){
    Random rand = new Random();
    int index  = rand.nextInt(32);
    return allNodes.get(index);    
  }

  public NodeInfo join(String ip, String port){
    NodeInfo curNode = new NodeInfo();
    curNode.nodeIp = ip;
    curNode.nodePort = port;
    curNode.nodeKey = Integer.parseInt(getKey(ip+":"+port, "32"));
    allNodes.add(curNode);
    return curNode;
  }

  public NodeInfo postJoin(String ip, String port){
    NodeInfo curNode = new NodeInfo();
    curNode.nodeIp = ip;
    curNode.nodePort = port;
    curNode.nodeKey = Integer.parseInt(getKey(ip+":"+port, "32"));
    allNodes.add(curNode);
    return curNode;
  }

  public static void main(String args[]) throws NoSuchAlgorithmException{
    SNodeServiceHandler test = new SNodeServiceHandler();
    String s = "192.168.1.1:9986";
    System.out.println(test.getKey(s,"32"));
  }



}
