import org.apache.thrift.TException;
import org.apache.thrift.transport.TTransportFactory;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TFramedTransport;
import org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters;
import org.apache.thrift.protocol.TBinaryProtocol;
import java.util.*;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


public class SNodeServiceHandler implements SNodeService.Iface
{
	private List<NodeInfo> allNodes = new ArrayList<NodeInfo>();
	private int nodeNum = 0;
	private boolean joinLock = false;

	// input is the string that you want to hash
	// the key generated by this function will be the MD5 code of the input
	// mod by range

	public String getKey(String input, String range){
		try {
			MessageDigest md = MessageDigest.getInstance("MD5");
			byte[] messageDigest = md.digest(input.getBytes());
			BigInteger no = new BigInteger(1, messageDigest);
			BigInteger key = no.mod(new BigInteger (range));
			return key.toString(10);
		}
		catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}
  

	// randomly choose a node then give it's information the the client
	public NodeInfo getNode(){
		Random rand = new Random();
		int index  = rand.nextInt(allNodes.size());
		return allNodes.get(index);    
	}

	public NodeInfo join(String ip, String port){
        	NodeInfo retNode = new NodeInfo();
		if(!joinLock){
			joinLock = true;
			NodeInfo curNode = new NodeInfo();
			curNode.nodeIp = ip;
			curNode.nodePort = port; 
			int key = Integer.parseInt(getKey(ip+":"+port, "32"));
			curNode.nodeKey = key;
			if (allNodes.size() == 0){
				retNode.nodeKey = key;
				retNode.nodeIp = "";
				retNode.nodePort = "";
			}
			else retNode = getNode();
			allNodes.add(curNode);
		}
		else {
			retNode.nodeIp = "Busy, try later.";
		}
		return retNode;
	}

	public boolean postJoin(String ip, String port){
		joinLock = false;
		return true;
	}

	public static void main(String args[]) throws NoSuchAlgorithmException{
		SNodeServiceHandler test = new SNodeServiceHandler();
		String s = "192.168.1.1:9986";
		System.out.println(test.getKey(s,"32"));
  	}

}
